name: Build and Push moshi-runpod

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: moshi-runpod
  REGISTRY: ghcr.io  # change to docker.io if you prefer Docker Hub
  # For GHCR, set this to your GitHub username in secrets if you want
  # For Docker Hub, set REGISTRY=docker.io and REGISTRY_USER to your Hub username

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write    # needed for GHCR
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login (GHCR or Docker Hub)
        if: env.REGISTRY == 'ghcr.io'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login (Docker Hub)
        if: env.REGISTRY == 'docker.io'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          # your base image is CUDA 12 / PyTorch 2.1; linux/amd64 is typical
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

